[{"S:\\CyberVault\\cybervaultnext\\pages\\analyser.js":"1","S:\\CyberVault\\cybervaultnext\\pages\\api\\auth\\[...auth0].js":"2","S:\\CyberVault\\cybervaultnext\\pages\\api\\passwords\\[id].js":"3","S:\\CyberVault\\cybervaultnext\\pages\\api\\passwords.js":"4","S:\\CyberVault\\cybervaultnext\\pages\\dashboard.js":"5","S:\\CyberVault\\cybervaultnext\\pages\\distinctor.js":"6","S:\\CyberVault\\cybervaultnext\\pages\\faceReg.js":"7","S:\\CyberVault\\cybervaultnext\\pages\\generator.js":"8","S:\\CyberVault\\cybervaultnext\\pages\\index.js":"9","S:\\CyberVault\\cybervaultnext\\pages\\_app.js":"10","S:\\CyberVault\\cybervaultnext\\components\\InactivityTimer.js":"11","S:\\CyberVault\\cybervaultnext\\components\\MetaData.js":"12","S:\\CyberVault\\cybervaultnext\\components\\Passwords.js":"13","S:\\CyberVault\\cybervaultnext\\components\\AddPassword.js":"14","S:\\CyberVault\\cybervaultnext\\components\\EditPassword.js":"15","S:\\CyberVault\\cybervaultnext\\components\\NavigationBar.js":"16","S:\\CyberVault\\cybervaultnext\\components\\passwordPreview.js":"17"},{"size":3446,"mtime":1652349324941,"results":"18","hashOfConfig":"19"},{"size":81,"mtime":1644152170992,"results":"20","hashOfConfig":"19"},{"size":1486,"mtime":1652279612281,"results":"21","hashOfConfig":"19"},{"size":2006,"mtime":1652590085655,"results":"22","hashOfConfig":"19"},{"size":12866,"mtime":1652600362870,"results":"23","hashOfConfig":"19"},{"size":4534,"mtime":1652357905441,"results":"24","hashOfConfig":"19"},{"size":8949,"mtime":1652599943999,"results":"25","hashOfConfig":"19"},{"size":6933,"mtime":1652520555913,"results":"26","hashOfConfig":"19"},{"size":1446,"mtime":1652601261293,"results":"27","hashOfConfig":"19"},{"size":537,"mtime":1652554719347,"results":"28","hashOfConfig":"19"},{"size":1795,"mtime":1652521818024,"results":"29","hashOfConfig":"19"},{"size":377,"mtime":1652170259914,"results":"30","hashOfConfig":"19"},{"size":3954,"mtime":1652590100417,"results":"31","hashOfConfig":"19"},{"size":10770,"mtime":1652593930712,"results":"32","hashOfConfig":"19"},{"size":9931,"mtime":1652590110481,"results":"33","hashOfConfig":"19"},{"size":2793,"mtime":1652258007499,"results":"34","hashOfConfig":"19"},{"size":4539,"mtime":1652214860637,"results":"35","hashOfConfig":"19"},{"filePath":"36","messages":"37","suppressedMessages":"38","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39"},"128bp7p",{"filePath":"40","messages":"41","suppressedMessages":"42","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"43","messages":"44","suppressedMessages":"45","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"46","messages":"47","suppressedMessages":"48","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"49","messages":"50","suppressedMessages":"51","errorCount":4,"fatalErrorCount":0,"warningCount":15,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"52","messages":"53","suppressedMessages":"54","errorCount":4,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55"},{"filePath":"56","messages":"57","suppressedMessages":"58","errorCount":5,"fatalErrorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"59","messages":"60","suppressedMessages":"61","errorCount":7,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"62","messages":"63","suppressedMessages":"64","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"65","messages":"66","suppressedMessages":"67","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"68","messages":"69","suppressedMessages":"70","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"71","messages":"72","suppressedMessages":"73","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"74","messages":"75","suppressedMessages":"76","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"77","messages":"78","suppressedMessages":"79","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"80","messages":"81","suppressedMessages":"82","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"83","messages":"84","suppressedMessages":"85","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"86"},{"filePath":"87","messages":"88","suppressedMessages":"89","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"90"},"S:\\CyberVault\\cybervaultnext\\pages\\analyser.js",["91","92"],[],"import { withPageAuthRequired } from '@auth0/nextjs-auth0'\r\nimport { useState } from 'react'\r\nimport MetaData from '../components/MetaData'\r\nimport styles from '../styles/Home.module.css'\r\nimport zxcvbn from 'zxcvbn'\r\nimport Tippy from '@tippy.js/react'\r\nimport 'tippy.js/dist/tippy.css'\r\n\r\nconst Analyser = () =>{\r\n    const[passForStrength, setPassForStrength]=useState('')\r\n    const analysisResult=zxcvbn(passForStrength)\r\n    const analysisScore=analysisResult.score*100/4\r\n\r\n    const strengthLabel = ()=>{\r\n        switch(analysisResult.score){\r\n            case 0:\r\n                return 'Very Weak, easily crackable'\r\n            case 1:\r\n                return 'Weak-ish still'\r\n            case 2:\r\n                return 'Its Okay-ish'\r\n            case 3:\r\n                return 'Better now...'\r\n            case 4:\r\n                return 'Perfectly Strong & Complex!'\r\n            default:\r\n                return 'none'\r\n        }\r\n    }\r\n    const colorProgression=()=>{\r\n        switch(analysisResult.score){\r\n            case 0:\r\n                return 'black'\r\n            case 1:\r\n                return '#EA1111'\r\n            case 2:\r\n                return '#fff200'\r\n            case 3:\r\n                return '#66ff00'\r\n            case 4:\r\n                return '#00ff5e'\r\n            default:\r\n                return 'none'\r\n        }\r\n    }\r\n\r\n    const progressColorChange=()=>({\r\n        width:`${analysisScore}%`, background:colorProgression()\r\n    })\r\n\r\n    return(\r\n        <div className={styles.background}>\r\n            <MetaData title=\"analyser\" />\r\n            <div className={styles.analyseContainer}>\r\n                <div className={styles.analyser}>\r\n                    <div className='col-md-10 mx-auto'>\r\n                        <h2 className='text-center my-5 bg-light text-dark'>Robust Password strength analyser\r\n                        <img src=\"./strength1.png\" alt=\"\" style={{width : '50px', height : '50px'}} className=\"mr-2\" />\r\n                        </h2>\r\n                        <h5>Analyse the strength of your password efficiently and be rest assured \r\n                        <Tippy content={\r\n                                'ZXCVBN library is used as a password strength and entropy estimator inspired by password crackers through pattern matching and password scoring'\r\n                              }>\r\n                              <img src=\"./info.png\" alt=\"\" style={{width : '30px', height : '30px'}} className=\"mr-2\" />\r\n                        </Tippy>\r\n                             - \r\n                        </h5>\r\n                        <br></br>\r\n                        <div className='form-group mb-3'>\r\n                            <input type=\"password\" className='form-control shadow-none' placeholder='Password for strength analysis' onChange={e=>setPassForStrength(e.target.value)}/>\r\n                        </div>\r\n                        <div className='progress'>\r\n                            <div className='progress-bar' style={progressColorChange()} passForStrength={passForStrength}></div>\r\n                        </div>\r\n                        <br></br>\r\n                        <h3 className='text-center' style={{color:colorProgression()}}>{strengthLabel()}</h3>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\nexport const getServerSideProps = withPageAuthRequired()\r\n\r\nexport default Analyser\r\n","S:\\CyberVault\\cybervaultnext\\pages\\api\\auth\\[...auth0].js",[],[],"S:\\CyberVault\\cybervaultnext\\pages\\api\\passwords\\[id].js",[],[],"S:\\CyberVault\\cybervaultnext\\pages\\api\\passwords.js",[],[],"S:\\CyberVault\\cybervaultnext\\pages\\dashboard.js",["93","94","95","96","97","98","99","100","101","102","103","104","105","106","107","108","109","110","111"],[],"S:\\CyberVault\\cybervaultnext\\pages\\distinctor.js",["112","113","114","115","116","117","118"],[],"import React, { useState } from \"react\";\r\nimport { withPageAuthRequired } from '@auth0/nextjs-auth0'\r\nimport styles from '../styles/Home.module.css'\r\nimport dynamic from \"next/dynamic\"\r\nimport Tippy from '@tippy.js/react'\r\nimport 'tippy.js/dist/tippy.css'\r\n\r\nconst HIBPPasswordChecker=dynamic(import ('react-have-i-been-pwned'), {ssr:false})\r\n\r\nconst distinctor =()=> {\r\n  const [inputPassword,setInputPassword]=useState('')\r\n\r\n  const handlePasswordInput = (e) => {\r\n    setInputPassword(e.target.value)\r\n  };\r\n    return (\r\n        <div className={styles.distinctorBg}>\r\n            <div className={styles.distinctorContainer}>\r\n                <div className={styles.distinctor}>\r\n                    <div className=\"col-md-10 mx-auto\">\r\n                        <h2 className=\"text-center my-4 bg-light text-dark\">\r\n                          <img src=\"./hack2.png\" alt=\"\" style={{width : '40px', height : '40px'}} className=\"mr-2\" />  \r\n                          Password Distinctor\r\n                        </h2>\r\n                        <h5 className=\"text-dark\">This function will help you analyse the uniqueness of your chosen password\r\n                        <img src=\"./hack1.png\" alt=\"\" style={{width : '40px', height : '40px'}} className=\"mr-2\" />\r\n                        </h5>\r\n                        <ul className=\"text-primary\">\r\n                          <li> It cross-references the Troy Hunt (Have-I-Been-Pawned) database\r\n                            <Tippy content={\r\n                                'The Troy Hunt database contains all pawned passwords that have been hacked/breached in previously known data breaches, hence determining the passwords that are easier to crack and no longer safe to use!!'\r\n                              }>\r\n                              <img src=\"./info.png\" alt=\"\" style={{width : '30px', height : '30px'}} className=\"mr-2\" />\r\n                            </Tippy>\r\n                          </li>\r\n                          <li> It determines whether the password entered has been compromised/breached before.</li>\r\n                          <li> It indicates whether a password is safe to utilise or not!</li>\r\n                        </ul>\r\n                        <div className=\"text-center text-dark\">\r\n                            <b>\r\n                            Check if your password has been breached or hacked before over here:\r\n                            </b>\r\n                            <div className='form-group mb-3'>\r\n                                <input type=\"password\" onChange={handlePasswordInput} value={inputPassword} style={{ width:\"50%\" }}/>\r\n                            </div>\r\n                        </div>\r\n                        <div style={{ textAlign: \"center\", minHeight: \"50px\" }}>\r\n                        <HIBPPasswordChecker password={inputPassword}>\r\n                            {({ initial, loading, error, pwned, count }) => {\r\n                            if (initial) {\r\n                              return null;\r\n                            }\r\n                            if (loading) {\r\n                              return \"Checking the uniqueness of this password...\";\r\n                            }\r\n                            if (error) {\r\n                              return `error: ${error}`;\r\n                            }\r\n                            if (!pwned){ \r\n                                return (\r\n                                <h3 className={styles.textColor}>\r\n                                    This password is good to go, strong and hasn't been used before!\r\n                                </h3>\r\n                                );\r\n                              }\r\n                            if (pwned){\r\n                                return (\r\n                                <h3 className=\"text-danger text-center\">\r\n                                    This password isn't safe to use  \r\n                                    and appeared in <strong className=\"text-dark bg-warning\">{count.toLocaleString()}</strong> known data breaches.\r\n                                    You can still use it, but you probably shouldn't.\r\n                                </h3>\r\n                                );}\r\n                            }}\r\n                        </HIBPPasswordChecker>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n      </div>\r\n    );\r\n}\r\n\r\nexport const getServerSideProps = withPageAuthRequired()\r\nexport default distinctor","S:\\CyberVault\\cybervaultnext\\pages\\faceReg.js",["119","120","121","122","123","124","125","126","127","128","129","130","131","132"],[],"S:\\CyberVault\\cybervaultnext\\pages\\generator.js",["133","134","135","136","137","138","139","140","141","142","143"],[],"S:\\CyberVault\\cybervaultnext\\pages\\index.js",["144","145","146","147","148"],[],"S:\\CyberVault\\cybervaultnext\\pages\\_app.js",[],[],"S:\\CyberVault\\cybervaultnext\\components\\InactivityTimer.js",[],[],"S:\\CyberVault\\cybervaultnext\\components\\MetaData.js",[],[],"S:\\CyberVault\\cybervaultnext\\components\\Passwords.js",["149"],[],"S:\\CyberVault\\cybervaultnext\\components\\AddPassword.js",[],[],"S:\\CyberVault\\cybervaultnext\\components\\EditPassword.js",[],[],"S:\\CyberVault\\cybervaultnext\\components\\NavigationBar.js",["150","151"],[],"import React from 'react'\r\nimport { Navbar, Nav } from 'react-bootstrap'\r\nimport { useUser } from '@auth0/nextjs-auth0'\r\nimport Image from 'next/image'\r\nimport Tippy from '@tippy.js/react'\r\nimport 'tippy.js/dist/tippy.css'\r\n\r\n\r\nconst NavigationComponent = () => {\r\n    const {user, error} = useUser()\r\n\r\n    return (\r\n        <Navbar fixed=\"top\" collapseOnSelect expand=\"lg\" bg=\"dark\" variant=\"dark\">\r\n            <Navbar.Brand className=\"mx-2 mx-md-4\" href=\"/\"><img src=\"./vault.png\" alt=\"\" style={{width : '40px', height : '40px'}} className=\"mr-2\" />CyberVault</Navbar.Brand>\r\n            <Navbar.Toggle aria-controls=\"responsive-navbar-nav\" />\r\n            <Navbar.Collapse className=\"d-lg-flex justify-content-end\" id=\"responsive-navbar-nav\">\r\n                {(!user & !error) ? \r\n                    <>\r\n                        <Tippy content={ \r\n                                <ol> Please register and login to access : - \r\n                                    <li>Cybervault - Password Manager</li>\r\n                                    <li>Cybervault - Password Generator</li>\r\n                                    <li>Cybervault - Password Distinctor</li>\r\n                                    <li>Cybervault - Password Strength Analyser</li>\r\n                                </ol>\r\n                            }>\r\n                            <img src=\"./info.png\" alt=\"\" style={{width : '30px', height : '30px'}} className=\"mr-2\" />\r\n                        </Tippy>\r\n                        <Nav.Link className=\"text-light\" href=\"api/auth/login\">Log-In/Register</Nav.Link> : \r\n                        <Image alt=\"avatar\" loader={myLoader} src={'https://ui-avatars.com/api/?background=random&name=John+Doe'} width=\"35\" height=\"35\" className=\"rounded-circle\" />\r\n                    </> :\r\n                    <>\r\n                        <Nav.Link className=\"text-light\" href=\"/faceReg\">Register Face</Nav.Link>\r\n                        <Nav.Link className=\"text-light\" href=\"/dashboard\">Manager</Nav.Link>\r\n                        <Nav.Link className=\"text-light\" href=\"/generator\">Generator</Nav.Link>\r\n                        <Nav.Link className=\"text-light\" href=\"/analyser\">Strength Analyser</Nav.Link>\r\n                        <Nav.Link className=\"text-light\" href=\"/distinctor\">Distinctor</Nav.Link>\r\n                        <Nav.Link className=\"text-light\" href=\"api/auth/logout\">Log-Out</Nav.Link>\r\n                        <Image alt=\"avatar\" loader={myLoader} src={`https://ui-avatars.com/api/?background=random&name=${user.name}`} width=\"35\" height=\"35\" className=\"rounded-circle\" />\r\n                    </>\r\n                }\r\n            </Navbar.Collapse>\r\n        </Navbar>\r\n    )\r\n}\r\n\r\nconst myLoader=({src})=>{\r\n    return src\r\n}\r\n\r\nexport default NavigationComponent","S:\\CyberVault\\cybervaultnext\\components\\passwordPreview.js",["152"],[],"import { useState } from \"react\";\r\nimport Modal from 'react-bootstrap/Modal'\r\nimport FormControl from 'react-bootstrap/FormControl'\r\nimport Container from \"react-bootstrap/Container\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport Row from \"react-bootstrap/Row\";\r\nimport Col from \"react-bootstrap/Col\";\r\nimport EditPasswordComp from \"./EditPassword\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faEye, faEyeSlash, faCopy, faEdit, faTrashAlt } from '@fortawesome/free-solid-svg-icons'\r\nimport {toast, ToastContainer} from 'react-toastify'\r\nimport 'react-toastify/dist/ReactToastify.css'\r\n\r\nconst PasswordPreviewComp = props => {\r\n  const [passwordType, setPasswordType] = useState('password')\r\n\r\n  const clipBoardCopy=()=>{\r\n    const passwordText = document.createElement('textarea')\r\n    passwordText.innerText = props.password\r\n    document.body.appendChild(passwordText)\r\n    passwordText.select()\r\n    document.execCommand('copy')\r\n    passwordText.remove()\r\n  }\r\n  const notify='Successfully copied your password to clipboard'\r\n  const notification = (message)=>{\r\n      toast(message, {\r\n          position:'top-center',\r\n          autoClose:250,\r\n          hideProgressBar:false,\r\n          closeOnClick:false,\r\n          pauseOnHover:false,\r\n          draggable:true,\r\n          progress:undefined,\r\n      })\r\n  }\r\n  const handleCopyPassToCLip=(e)=>{\r\n    clipBoardCopy()\r\n    notification(notify)\r\n  }\r\n\r\n  return (\r\n    <Modal {...props} size=\"xlg\"aria-labelledby=\"contained-modal-title-vcenter\" centered>\r\n      <Modal.Header style={{backgroundColor : \"#d1e1f0\"}} closeButton>\r\n        <Modal.Title id=\"contained-modal-title-vcenter\">\r\n          Account: <a href={`https://${props.accountUrl}`} rel=\"noreferrer\" target=\"_blank\">{props.accountName}</a> <img alt=\"avatar\" loader={myLoader} src={`https://www.google.com/s2/favicons?sz=64&domain_url=${props.accountUrl}`} width=\"35\" height=\"35\" className=\"rounded-circle\" />\r\n        </Modal.Title>\r\n      </Modal.Header>\r\n      <Modal.Body className=\"show-grid\">\r\n        <Container>\r\n          <Row>\r\n            <Col>\r\n              <p>Email added for {props.accountName} account:</p>\r\n              <div><FormControl type=\"text\" value={props.email} className=\"my-1\" readOnly/></div>\r\n              <p></p>\r\n              <Row className=\"my-1\">\r\n                  <p>Password added for {props.accountName} account:</p>\r\n                  <Col xs={7} md={9}> \r\n                      <FormControl type={passwordType} value={props.password} readOnly/>\r\n                  </Col>\r\n                  <Col xs={2} md={1} className=\"text-left\">\r\n                      <span style={{cursor : 'pointer'}} onClick={() => {setPasswordType(passwordType === \"password\"? \"text\" : \"password\")}}>\r\n                          {passwordType === \"password\"? \r\n                          <FontAwesomeIcon icon={faEye} size=\"1x\" className=\"align-bottom\" /> \r\n                          : \r\n                          <FontAwesomeIcon icon={faEyeSlash} size=\"1x\" className=\"align-bottom\" /> }\r\n                      </span>\r\n                  </Col>\r\n                  <Col xs={2} md={1} className=\"text-right\">\r\n                      <span style={{cursor : 'pointer'}} onClick={handleCopyPassToCLip}>\r\n                        <FontAwesomeIcon icon={faCopy} size=\"1x\" className=\"align-bottom\" />\r\n                      </span>\r\n                  <ToastContainer position='top-center' autoClose={250} hideProgressBar={false} newestOnTop={false} closeOnClick rtl={false} pauseOnFocusLoss draggable pauseOnHover/>\r\n                </Col>\r\n              </Row>\r\n            </Col>\r\n          </Row>\r\n        </Container>\r\n      </Modal.Body>\r\n      <Modal.Footer>\r\n        <Button onClick={props.onEdit}>\r\n          <FontAwesomeIcon icon={faEdit} size=\"sm\" className=\"\" />Edit\r\n        </Button>\r\n        <Button variant=\"danger\" onClick={props.onDelete}>\r\n          <FontAwesomeIcon icon={faTrashAlt} size=\"1x\" className=\"\" />Del \r\n        </Button>\r\n      </Modal.Footer>\r\n      <EditPasswordComp closePreview={() => {props.onHide()}} id={props.id} show={props.edit} editPassword={props.editPassword} onEdit={props.onEdit}\r\n        accountName={props.accountName}\r\n        accountUrl={props.accountUrl}\r\n        email={props.email}\r\n        password={props.password}\r\n        title={\"Edit Password for \"+props.accountName}\r\n        onHide={props.onHideEdit}/>\r\n      </Modal>\r\n    )\r\n}\r\n\r\nconst myLoader=({src})=>{\r\n  return src\r\n}\r\n\r\nexport default PasswordPreviewComp",{"ruleId":"153","severity":1,"message":"154","line":58,"column":25,"nodeType":"155","endLine":58,"endColumn":120},{"ruleId":"153","severity":1,"message":"154","line":64,"column":31,"nodeType":"155","endLine":64,"endColumn":121},{"ruleId":"156","severity":1,"message":"157","line":54,"column":15,"nodeType":"158","endLine":58,"endColumn":6},{"ruleId":"153","severity":1,"message":"154","line":129,"column":33,"nodeType":"155","endLine":129,"endColumn":127},{"ruleId":"153","severity":1,"message":"154","line":131,"column":33,"nodeType":"155","endLine":131,"endColumn":121},{"ruleId":"153","severity":1,"message":"154","line":132,"column":66,"nodeType":"155","endLine":132,"endColumn":157},{"ruleId":"153","severity":1,"message":"154","line":141,"column":41,"nodeType":"155","endLine":141,"endColumn":131},{"ruleId":"153","severity":1,"message":"154","line":144,"column":33,"nodeType":"155","endLine":144,"endColumn":124},{"ruleId":"153","severity":1,"message":"154","line":153,"column":58,"nodeType":"155","endLine":153,"endColumn":147},{"ruleId":"153","severity":1,"message":"154","line":175,"column":33,"nodeType":"155","endLine":175,"endColumn":127},{"ruleId":"153","severity":1,"message":"154","line":177,"column":33,"nodeType":"155","endLine":177,"endColumn":125},{"ruleId":"153","severity":1,"message":"154","line":187,"column":52,"nodeType":"155","endLine":187,"endColumn":146},{"ruleId":"159","severity":2,"message":"160","line":188,"column":29,"nodeType":"155","endLine":188,"endColumn":72},{"ruleId":"161","severity":2,"message":"162","line":188,"column":107,"nodeType":"163","messageId":"164"},{"ruleId":"153","severity":1,"message":"154","line":190,"column":29,"nodeType":"155","endLine":190,"endColumn":119},{"ruleId":"153","severity":1,"message":"154","line":195,"column":37,"nodeType":"155","endLine":195,"endColumn":128},{"ruleId":"153","severity":1,"message":"154","line":206,"column":60,"nodeType":"155","endLine":206,"endColumn":154},{"ruleId":"159","severity":2,"message":"160","line":207,"column":37,"nodeType":"155","endLine":207,"endColumn":80},{"ruleId":"161","severity":2,"message":"162","line":207,"column":115,"nodeType":"163","messageId":"164"},{"ruleId":"153","severity":1,"message":"154","line":209,"column":41,"nodeType":"155","endLine":209,"endColumn":131},{"ruleId":"153","severity":1,"message":"154","line":214,"column":41,"nodeType":"155","endLine":214,"endColumn":132},{"ruleId":"165","severity":2,"message":"166","line":11,"column":42,"nodeType":"167","endLine":11,"endColumn":50},{"ruleId":"153","severity":1,"message":"154","line":22,"column":27,"nodeType":"155","endLine":22,"endColumn":118},{"ruleId":"153","severity":1,"message":"154","line":26,"column":25,"nodeType":"155","endLine":26,"endColumn":116},{"ruleId":"153","severity":1,"message":"154","line":33,"column":31,"nodeType":"155","endLine":33,"endColumn":121},{"ruleId":"161","severity":2,"message":"162","line":62,"column":81,"nodeType":"163","messageId":"164"},{"ruleId":"161","severity":2,"message":"162","line":69,"column":54,"nodeType":"163","messageId":"164"},{"ruleId":"161","severity":2,"message":"162","line":71,"column":83,"nodeType":"163","messageId":"164"},{"ruleId":"165","severity":2,"message":"168","line":17,"column":27,"nodeType":"167","endLine":17,"endColumn":35},{"ruleId":"165","severity":2,"message":"168","line":18,"column":45,"nodeType":"167","endLine":18,"endColumn":53},{"ruleId":"165","severity":2,"message":"168","line":19,"column":33,"nodeType":"167","endLine":19,"endColumn":41},{"ruleId":"165","severity":2,"message":"168","line":20,"column":47,"nodeType":"167","endLine":20,"endColumn":55},{"ruleId":"153","severity":1,"message":"154","line":71,"column":25,"nodeType":"155","endLine":71,"endColumn":115},{"ruleId":"153","severity":1,"message":"154","line":90,"column":33,"nodeType":"155","endLine":90,"endColumn":127},{"ruleId":"153","severity":1,"message":"154","line":92,"column":33,"nodeType":"155","endLine":92,"endColumn":125},{"ruleId":"153","severity":1,"message":"154","line":103,"column":33,"nodeType":"155","endLine":103,"endColumn":123},{"ruleId":"153","severity":1,"message":"154","line":108,"column":37,"nodeType":"155","endLine":108,"endColumn":128},{"ruleId":"153","severity":1,"message":"154","line":121,"column":37,"nodeType":"155","endLine":121,"endColumn":127},{"ruleId":"153","severity":1,"message":"154","line":126,"column":41,"nodeType":"155","endLine":126,"endColumn":132},{"ruleId":"153","severity":1,"message":"154","line":139,"column":49,"nodeType":"155","endLine":139,"endColumn":139},{"ruleId":"153","severity":1,"message":"154","line":144,"column":53,"nodeType":"155","endLine":144,"endColumn":144},{"ruleId":"159","severity":2,"message":"169","line":154,"column":109,"nodeType":"155","endLine":154,"endColumn":154},{"ruleId":"165","severity":2,"message":"170","line":15,"column":44,"nodeType":"167","endLine":15,"endColumn":52},{"ruleId":"165","severity":2,"message":"170","line":16,"column":30,"nodeType":"167","endLine":16,"endColumn":38},{"ruleId":"165","severity":2,"message":"170","line":17,"column":31,"nodeType":"167","endLine":17,"endColumn":39},{"ruleId":"165","severity":2,"message":"170","line":18,"column":31,"nodeType":"167","endLine":18,"endColumn":39},{"ruleId":"165","severity":2,"message":"170","line":19,"column":35,"nodeType":"167","endLine":19,"endColumn":43},{"ruleId":"165","severity":2,"message":"170","line":20,"column":43,"nodeType":"167","endLine":20,"endColumn":51},{"ruleId":"165","severity":2,"message":"170","line":21,"column":42,"nodeType":"167","endLine":21,"endColumn":50},{"ruleId":"153","severity":1,"message":"154","line":104,"column":29,"nodeType":"155","endLine":104,"endColumn":135},{"ruleId":"171","severity":1,"message":"172","line":104,"column":29,"nodeType":"155","endLine":104,"endColumn":135},{"ruleId":"153","severity":1,"message":"154","line":128,"column":25,"nodeType":"155","endLine":128,"endColumn":119},{"ruleId":"153","severity":1,"message":"154","line":130,"column":25,"nodeType":"155","endLine":130,"endColumn":114},{"ruleId":"153","severity":1,"message":"154","line":19,"column":17,"nodeType":"155","endLine":19,"endColumn":114},{"ruleId":"153","severity":1,"message":"154","line":20,"column":17,"nodeType":"155","endLine":20,"endColumn":73},{"ruleId":"153","severity":1,"message":"154","line":21,"column":17,"nodeType":"155","endLine":21,"endColumn":114},{"ruleId":"153","severity":1,"message":"154","line":24,"column":119,"nodeType":"155","endLine":24,"endColumn":209},{"ruleId":"153","severity":1,"message":"154","line":24,"column":288,"nodeType":"155","endLine":24,"endColumn":377},{"ruleId":"153","severity":1,"message":"154","line":51,"column":25,"nodeType":"155","endLine":51,"endColumn":187},{"ruleId":"153","severity":1,"message":"154","line":14,"column":61,"nodeType":"155","endLine":14,"endColumn":152},{"ruleId":"153","severity":1,"message":"154","line":27,"column":29,"nodeType":"155","endLine":27,"endColumn":119},{"ruleId":"153","severity":1,"message":"154","line":46,"column":117,"nodeType":"155","endLine":46,"endColumn":285},"@next/next/no-img-element","Do not use <img>. Use Image from 'next/image' instead. See: https://nextjs.org/docs/messages/no-img-element","JSXOpeningElement","react-hooks/exhaustive-deps","Effect callbacks are synchronous to prevent race conditions. Put the async function inside:\n\nuseEffect(() => {\n  async function fetchData() {\n    // You can await here\n    const response = await MyAPI.getData(someId);\n    // ...\n  }\n  fetchData();\n}, [someId]); // Or [] if effect doesn't need props or state\n\nLearn more about data fetching with Hooks: https://reactjs.org/link/hooks-data-fetching","ArrowFunctionExpression","@next/next/no-html-link-for-pages","Do not use the HTML <a> tag to navigate to /faceReg/. Use Link from 'next/link' instead. See: https://nextjs.org/docs/messages/no-html-link-for-pages","react/no-unescaped-entities","`'` can be escaped with `&apos;`, `&lsquo;`, `&#39;`, `&rsquo;`.","JSXText","unescapedEntityAlts","react-hooks/rules-of-hooks","React Hook \"useState\" is called in function \"distinctor\" that is neither a React function component nor a custom React Hook function. React component names must start with an uppercase letter. React Hook names must start with the word \"use\".","Identifier","React Hook \"useState\" is called in function \"faceReg\" that is neither a React function component nor a custom React Hook function. React component names must start with an uppercase letter. React Hook names must start with the word \"use\".","Do not use the HTML <a> tag to navigate to /dashboard/. Use Link from 'next/link' instead. See: https://nextjs.org/docs/messages/no-html-link-for-pages","React Hook \"useState\" is called in function \"generator\" that is neither a React function component nor a custom React Hook function. React component names must start with an uppercase letter. React Hook names must start with the word \"use\".","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images."]