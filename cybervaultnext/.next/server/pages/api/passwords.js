"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(() => {
var exports = {};
exports.id = "pages/api/passwords";
exports.ids = ["pages/api/passwords"];
exports.modules = {

/***/ "@auth0/nextjs-auth0":
/*!**************************************!*\
  !*** external "@auth0/nextjs-auth0" ***!
  \**************************************/
/***/ ((module) => {

module.exports = require("@auth0/nextjs-auth0");

/***/ }),

/***/ "faunadb":
/*!**************************!*\
  !*** external "faunadb" ***!
  \**************************/
/***/ ((module) => {

module.exports = require("faunadb");

/***/ }),

/***/ "yup":
/*!**********************!*\
  !*** external "yup" ***!
  \**********************/
/***/ ((module) => {

module.exports = require("yup");

/***/ }),

/***/ "(api)/./faunaDBModels.js":
/*!**************************!*\
  !*** ./faunaDBModels.js ***!
  \**************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"addNewPassword\": () => (/* binding */ addNewPassword),\n/* harmony export */   \"getPasswordsForUser\": () => (/* binding */ getPasswordsForUser),\n/* harmony export */   \"getPassword\": () => (/* binding */ getPassword),\n/* harmony export */   \"updatePassword\": () => (/* binding */ updatePassword),\n/* harmony export */   \"deletePassword\": () => (/* binding */ deletePassword)\n/* harmony export */ });\n/* harmony import */ var faunadb__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! faunadb */ \"faunadb\");\n/* harmony import */ var faunadb__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(faunadb__WEBPACK_IMPORTED_MODULE_0__);\n\nconst faunaClient = new (faunadb__WEBPACK_IMPORTED_MODULE_0___default().Client)({\n    secret: process.env.REACT_APP_FAUNA_KEY\n});\nconst addNewPassword = async (accountName, accountUrl, email, encryptedPassword, user, avatar)=>{\n    const date = new Date();\n    const months = [\n        'January',\n        'February',\n        'March',\n        'April',\n        'May',\n        'June',\n        'July',\n        'August',\n        'September',\n        'October',\n        'November',\n        'December'\n    ];\n    try {\n        let newAddedPassword = await faunaClient.query(faunadb__WEBPACK_IMPORTED_MODULE_0__.query.Create(faunadb__WEBPACK_IMPORTED_MODULE_0__.query.Collection('passwords'), {\n            data: {\n                accountName,\n                accountUrl,\n                email,\n                encryptedPassword,\n                avatar,\n                created__at: `${months[date.getMonth()]} ${date.getDate()}, ${date.getFullYear()}`,\n                user: {\n                    id: user.sub\n                }\n            }\n        }));\n        if (newAddedPassword.name === 'BadRequest') {\n            return 'Sorry, there was a problem with the request, Database Server issue!';\n        }\n        newAddedPassword.data.id = newAddedPassword.ref.value.id;\n        return newAddedPassword.data;\n    } catch (error) {\n        return error.message;\n    }\n};\nconst getPasswordsForUser = async (id)=>{\n    try {\n        let passwordsForUser = await faunaClient.query(faunadb__WEBPACK_IMPORTED_MODULE_0__.query.Paginate(faunadb__WEBPACK_IMPORTED_MODULE_0__.query.Match(faunadb__WEBPACK_IMPORTED_MODULE_0__.query.Index('user_passwords'), id)));\n        if (passwordsForUser.name === 'NotFound') {\n            return 'Passwords for the user were not found!';\n        }\n        if (passwordsForUser.name === 'BadRequest') {\n            return 'Sorry, there was a problem with the request, Database Server issue!';\n        }\n        let passwords = [];\n        for (let passwordId of passwordsForUser.data){\n            let password = await getPassword(passwordId.value.id);\n            passwords.push(password);\n        }\n        return passwords;\n    } catch (error) {\n        if (error.message === 'instance not found') {\n            return [];\n        }\n        return;\n    }\n};\nconst getPassword = async (id)=>{\n    try {\n        let password = await faunaClient.query(faunadb__WEBPACK_IMPORTED_MODULE_0__.query.Get(faunadb__WEBPACK_IMPORTED_MODULE_0__.query.Ref(faunadb__WEBPACK_IMPORTED_MODULE_0__.query.Collection('passwords'), id)));\n        if (password.name === 'NotFound') {\n            return 'Passwords for the user were not found!';\n        }\n        if (password.name === 'BadRequest') {\n            return 'Sorry, there was a problem with the request, Database Server issue!';\n        }\n        password.data.id = password.ref.value.id;\n        return password.data;\n    } catch (error) {\n        return error.message;\n    }\n};\nconst updatePassword = async (payload, id)=>{\n    try {\n        let password = await faunaClient.query(faunadb__WEBPACK_IMPORTED_MODULE_0__.query.Update(faunadb__WEBPACK_IMPORTED_MODULE_0__.query.Ref(faunadb__WEBPACK_IMPORTED_MODULE_0__.query.Collection('passwords'), id), {\n            data: payload\n        }));\n        if (password.name === 'NotFound') {\n            return 'Required password data Not found';\n        }\n        if (password.name === 'BadRequest') {\n            return 'Something went wrong, Database Server issue!';\n        }\n        password.data.id = password.ref.value.id;\n        return password.data;\n    } catch (error) {\n        return error.message;\n    }\n};\nconst deletePassword = async (id)=>{\n    try {\n        let password = await faunaClient.query(faunadb__WEBPACK_IMPORTED_MODULE_0__.query.Delete(faunadb__WEBPACK_IMPORTED_MODULE_0__.query.Ref(faunadb__WEBPACK_IMPORTED_MODULE_0__.query.Collection('passwords'), id)));\n        if (password.name === 'NotFound') {\n            return 'Required password data Not found';\n        }\n        if (password.name === 'BadRequest') {\n            return 'Something went wrong, Database Server issue!';\n        }\n        password.data.id = password.ref.value.id;\n        return password.data;\n    } catch (error) {\n        return error.message;\n    }\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(api)/./faunaDBModels.js\n");

/***/ }),

/***/ "(api)/./pages/api/passwords.js":
/*!********************************!*\
  !*** ./pages/api/passwords.js ***!
  \********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var _auth0_nextjs_auth0__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @auth0/nextjs-auth0 */ \"@auth0/nextjs-auth0\");\n/* harmony import */ var _auth0_nextjs_auth0__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_auth0_nextjs_auth0__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _faunaDBModels__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../faunaDBModels */ \"(api)/./faunaDBModels.js\");\n/* harmony import */ var yup__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! yup */ \"yup\");\n/* harmony import */ var yup__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(yup__WEBPACK_IMPORTED_MODULE_2__);\n\n\n\n// This API component is responsible for all API requests regarding adding the password and getting user specific passwords\n// all requests have been secured ( with user authentication requirement and server side data validation as well) \n// and proper exception/error handling has been conducted\nconst schema = yup__WEBPACK_IMPORTED_MODULE_2__.object({\n    accountName: yup__WEBPACK_IMPORTED_MODULE_2__.string().matches(/^[aA-zZ\\s]+$/).required(),\n    accountUrl: yup__WEBPACK_IMPORTED_MODULE_2__.string().matches(/((https?):\\/\\/)?(www.)?[a-z0-9]+(\\.[a-z]{2,}){1,3}(#?\\/?[a-zA-Z0-9#]+)*\\/?(\\?[a-zA-Z0-9-_]+=[a-zA-Z0-9-%]+&?)?$/).required(),\n    email: yup__WEBPACK_IMPORTED_MODULE_2__.string().email().required(),\n    encryptedPassword: yup__WEBPACK_IMPORTED_MODULE_2__.string().required()\n});\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ((0,_auth0_nextjs_auth0__WEBPACK_IMPORTED_MODULE_0__.withApiAuthRequired)(async (req, res)=>{\n    const user = (0,_auth0_nextjs_auth0__WEBPACK_IMPORTED_MODULE_0__.getSession)(req, res).user;\n    if (req.method === 'POST') {\n        let { accountName , accountUrl , email , encryptedPassword , avatar  } = req.body;\n        //The request body is being data validated using the Yup schema\n        if (schema.validate(req.body)) {\n            let newPassword = await (0,_faunaDBModels__WEBPACK_IMPORTED_MODULE_1__.addNewPassword)(accountName, accountUrl, email, encryptedPassword, user, avatar);\n            res.status(201).json({\n                message: 'Successfully created password',\n                data: newPassword,\n                status: 'ok'\n            });\n        } else {\n            return res.status(400).json({\n                message: 'Data validation failed',\n                data: null,\n                status: false\n            });\n        }\n    } else if (req.method === 'GET') {\n        let passwords = await (0,_faunaDBModels__WEBPACK_IMPORTED_MODULE_1__.getPasswordsForUser)(user.sub);\n        if (!passwords) return res.status(400).json({\n            message: 'Something went wrong',\n            data: null,\n            status: false\n        });\n        res.status(200).json({\n            message: 'Successfully retrieved passwords',\n            data: passwords,\n            status: true\n        });\n    } else {\n        res.status(405).json({\n            message: 'Method not allowed',\n            data: null,\n            status: false\n        });\n    }\n}));\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,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b3Jkcy5qcz9hODRlIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IHdpdGhBcGlBdXRoUmVxdWlyZWQsIGdldFNlc3Npb24gfSBmcm9tICdAYXV0aDAvbmV4dGpzLWF1dGgwJ1xyXG5pbXBvcnQgeyBhZGROZXdQYXNzd29yZCwgZ2V0UGFzc3dvcmRzRm9yVXNlciB9IGZyb20gJy4uLy4uL2ZhdW5hREJNb2RlbHMnXHJcbmltcG9ydCAqIGFzIFl1cCBmcm9tICd5dXAnXHJcblxyXG4vLyBUaGlzIEFQSSBjb21wb25lbnQgaXMgcmVzcG9uc2libGUgZm9yIGFsbCBBUEkgcmVxdWVzdHMgcmVnYXJkaW5nIGFkZGluZyB0aGUgcGFzc3dvcmQgYW5kIGdldHRpbmcgdXNlciBzcGVjaWZpYyBwYXNzd29yZHNcclxuLy8gYWxsIHJlcXVlc3RzIGhhdmUgYmVlbiBzZWN1cmVkICggd2l0aCB1c2VyIGF1dGhlbnRpY2F0aW9uIHJlcXVpcmVtZW50IGFuZCBzZXJ2ZXIgc2lkZSBkYXRhIHZhbGlkYXRpb24gYXMgd2VsbCkgXHJcbi8vIGFuZCBwcm9wZXIgZXhjZXB0aW9uL2Vycm9yIGhhbmRsaW5nIGhhcyBiZWVuIGNvbmR1Y3RlZFxyXG5cclxuY29uc3Qgc2NoZW1hPVl1cC5vYmplY3Qoe1xyXG4gICAgYWNjb3VudE5hbWU6WXVwLnN0cmluZygpLm1hdGNoZXMoL15bYUEtelpcXHNdKyQvKS5yZXF1aXJlZCgpLFxyXG4gICAgYWNjb3VudFVybDpZdXAuc3RyaW5nKCkubWF0Y2hlcygvKChodHRwcz8pOlxcL1xcLyk/KHd3dy4pP1thLXowLTldKyhcXC5bYS16XXsyLH0pezEsM30oIz9cXC8/W2EtekEtWjAtOSNdKykqXFwvPyhcXD9bYS16QS1aMC05LV9dKz1bYS16QS1aMC05LSVdKyY/KT8kLykucmVxdWlyZWQoKSxcclxuICAgIGVtYWlsOll1cC5zdHJpbmcoKS5lbWFpbCgpLnJlcXVpcmVkKCksXHJcbiAgICBlbmNyeXB0ZWRQYXNzd29yZDpZdXAuc3RyaW5nKCkucmVxdWlyZWQoKVxyXG59KTtcclxuXHJcbmV4cG9ydCBkZWZhdWx0IHdpdGhBcGlBdXRoUmVxdWlyZWQoYXN5bmMgKHJlcSwgcmVzKSA9PiB7XHJcbiAgICBjb25zdCB1c2VyID0gZ2V0U2Vzc2lvbihyZXEsIHJlcykudXNlclxyXG4gICAgaWYgKHJlcS5tZXRob2QgPT09ICdQT1NUJykge1xyXG4gICAgICAgIGxldCB7XHJcbiAgICAgICAgICAgIGFjY291bnROYW1lLCBhY2NvdW50VXJsLCBlbWFpbCxcclxuICAgICAgICAgICAgZW5jcnlwdGVkUGFzc3dvcmQsIGF2YXRhclxyXG4gICAgICAgIH0gPSByZXEuYm9keVxyXG4gICAgICAgIC8vVGhlIHJlcXVlc3QgYm9keSBpcyBiZWluZyBkYXRhIHZhbGlkYXRlZCB1c2luZyB0aGUgWXVwIHNjaGVtYVxyXG4gICAgICAgIGlmKHNjaGVtYS52YWxpZGF0ZShyZXEuYm9keSkpe1xyXG4gICAgICAgICAgICBsZXQgbmV3UGFzc3dvcmQgPSBhd2FpdCBhZGROZXdQYXNzd29yZChcclxuICAgICAgICAgICAgICAgIGFjY291bnROYW1lLCBhY2NvdW50VXJsLCBcclxuICAgICAgICAgICAgICAgIGVtYWlsLCBlbmNyeXB0ZWRQYXNzd29yZCxcclxuICAgICAgICAgICAgICAgIHVzZXIsICBcclxuICAgICAgICAgICAgICAgIGF2YXRhclxyXG4gICAgICAgICAgICApXHJcbiAgICAgICAgICAgIHJlcy5zdGF0dXMoMjAxKS5qc29uKHsgXHJcbiAgICAgICAgICAgICAgICBtZXNzYWdlOiAnU3VjY2Vzc2Z1bGx5IGNyZWF0ZWQgcGFzc3dvcmQnLFxyXG4gICAgICAgICAgICAgICAgZGF0YTogbmV3UGFzc3dvcmQsXHJcbiAgICAgICAgICAgICAgICBzdGF0dXM6ICdvaydcclxuICAgICAgICAgICAgfSlcclxuICAgICAgICB9XHJcbiAgICAgICAgZWxzZXtcclxuICAgICAgICAgICAgcmV0dXJuIHJlcy5zdGF0dXMoNDAwKS5qc29uKHtcclxuICAgICAgICAgICAgICAgIG1lc3NhZ2U6ICdEYXRhIHZhbGlkYXRpb24gZmFpbGVkJyxcclxuICAgICAgICAgICAgICAgIGRhdGE6IG51bGwsXHJcbiAgICAgICAgICAgICAgICBzdGF0dXM6IGZhbHNlXHJcbiAgICAgICAgICAgIH0pXHJcbiAgICAgICAgfVxyXG4gICAgfSBlbHNlIGlmIChyZXEubWV0aG9kID09PSAnR0VUJykge1xyXG4gICAgICAgIGxldCBwYXNzd29yZHMgPSBhd2FpdCBnZXRQYXNzd29yZHNGb3JVc2VyKHVzZXIuc3ViKVxyXG4gICAgICAgIGlmICghcGFzc3dvcmRzKSByZXR1cm4gcmVzLnN0YXR1cyg0MDApLmpzb24oe1xyXG4gICAgICAgICAgICBtZXNzYWdlOiAnU29tZXRoaW5nIHdlbnQgd3JvbmcnLFxyXG4gICAgICAgICAgICBkYXRhOiBudWxsLFxyXG4gICAgICAgICAgICBzdGF0dXM6IGZhbHNlXHJcbiAgICAgICAgfSlcclxuICAgICAgICByZXMuc3RhdHVzKDIwMCkuanNvbih7XHJcbiAgICAgICAgICAgIG1lc3NhZ2U6ICdTdWNjZXNzZnVsbHkgcmV0cmlldmVkIHBhc3N3b3JkcycsXHJcbiAgICAgICAgICAgIGRhdGE6IHBhc3N3b3JkcyxcclxuICAgICAgICAgICAgc3RhdHVzOiB0cnVlXHJcbiAgICAgICAgfSlcclxuICAgIH0gZWxzZSB7XHJcbiAgICAgICAgcmVzLnN0YXR1cyg0MDUpLmpzb24oe1xyXG4gICAgICAgICAgICBtZXNzYWdlOiAnTWV0aG9kIG5vdCBhbGxvd2VkJyxcclxuICAgICAgICAgICAgZGF0YTogbnVsbCxcclxuICAgICAgICAgICAgc3RhdHVzOiBmYWxzZVxyXG4gICAgICAgIH0pXHJcbiAgICB9XHJcbn0pXHJcbiJdLCJuYW1lcyI6WyJ3aXRoQXBpQXV0aFJlcXVpcmVkIiwiZ2V0U2Vzc2lvbiIsImFkZE5ld1Bhc3N3b3JkIiwiZ2V0UGFzc3dvcmRzRm9yVXNlciIsIll1cCIsInNjaGVtYSIsIm9iamVjdCIsImFjY291bnROYW1lIiwic3RyaW5nIiwibWF0Y2hlcyIsInJlcXVpcmVkIiwiYWNjb3VudFVybCIsImVtYWlsIiwiZW5jcnlwdGVkUGFzc3dvcmQiLCJyZXEiLCJyZXMiLCJ1c2VyIiwibWV0aG9kIiwiYXZhdGFyIiwiYm9keSIsInZhbGlkYXRlIiwibmV3UGFzc3dvcmQiLCJzdGF0dXMiLCJqc29uIiwibWVzc2FnZSIsImRhdGEiLCJwYXNzd29yZHMiLCJzdWIiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(api)/./pages/api/passwords.js\n");

/***/ })

};
;

// load runtime
var __webpack_require__ = require("../../webpack-api-runtime.js");
__webpack_require__.C(exports);
var __webpack_exec__ = (moduleId) => (__webpack_require__(__webpack_require__.s = moduleId))
var __webpack_exports__ = (__webpack_exec__("(api)/./pages/api/passwords.js"));
module.exports = __webpack_exports__;

})();