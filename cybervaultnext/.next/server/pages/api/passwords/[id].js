"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(() => {
var exports = {};
exports.id = "pages/api/passwords/[id]";
exports.ids = ["pages/api/passwords/[id]"];
exports.modules = {

/***/ "@auth0/nextjs-auth0":
/*!**************************************!*\
  !*** external "@auth0/nextjs-auth0" ***!
  \**************************************/
/***/ ((module) => {

module.exports = require("@auth0/nextjs-auth0");

/***/ }),

/***/ "faunadb":
/*!**************************!*\
  !*** external "faunadb" ***!
  \**************************/
/***/ ((module) => {

module.exports = require("faunadb");

/***/ }),

/***/ "(api)/./faunaDBModels.js":
/*!**************************!*\
  !*** ./faunaDBModels.js ***!
  \**************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"addNewPassword\": () => (/* binding */ addNewPassword),\n/* harmony export */   \"getPasswordsForUser\": () => (/* binding */ getPasswordsForUser),\n/* harmony export */   \"getPassword\": () => (/* binding */ getPassword),\n/* harmony export */   \"updatePassword\": () => (/* binding */ updatePassword),\n/* harmony export */   \"deletePassword\": () => (/* binding */ deletePassword)\n/* harmony export */ });\n/* harmony import */ var faunadb__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! faunadb */ \"faunadb\");\n/* harmony import */ var faunadb__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(faunadb__WEBPACK_IMPORTED_MODULE_0__);\n\nconst faunaClient = new (faunadb__WEBPACK_IMPORTED_MODULE_0___default().Client)({\n    secret: process.env.REACT_APP_FAUNA_KEY\n});\nconst addNewPassword = async (accountName, accountUrl, email, encryptedPassword, user, avatar)=>{\n    const date = new Date();\n    const months = [\n        'January',\n        'February',\n        'March',\n        'April',\n        'May',\n        'June',\n        'July',\n        'August',\n        'September',\n        'October',\n        'November',\n        'December'\n    ];\n    try {\n        let newAddedPassword = await faunaClient.query(faunadb__WEBPACK_IMPORTED_MODULE_0__.query.Create(faunadb__WEBPACK_IMPORTED_MODULE_0__.query.Collection('passwords'), {\n            data: {\n                accountName,\n                accountUrl,\n                email,\n                encryptedPassword,\n                avatar,\n                created__at: `${months[date.getMonth()]} ${date.getDate()}, ${date.getFullYear()}`,\n                user: {\n                    id: user.sub\n                }\n            }\n        }));\n        if (newAddedPassword.name === 'BadRequest') {\n            return 'Sorry, there was a problem with the request, Database Server issue!';\n        }\n        newAddedPassword.data.id = newAddedPassword.ref.value.id;\n        return newAddedPassword.data;\n    } catch (error) {\n        return error.message;\n    }\n};\nconst getPasswordsForUser = async (id)=>{\n    try {\n        let passwordsForUser = await faunaClient.query(faunadb__WEBPACK_IMPORTED_MODULE_0__.query.Paginate(faunadb__WEBPACK_IMPORTED_MODULE_0__.query.Match(faunadb__WEBPACK_IMPORTED_MODULE_0__.query.Index('user_passwords'), id)));\n        if (passwordsForUser.name === 'NotFound') {\n            return 'Passwords for the user were not found!';\n        }\n        if (passwordsForUser.name === 'BadRequest') {\n            return 'Sorry, there was a problem with the request, Database Server issue!';\n        }\n        let passwords = [];\n        for (let passwordId of passwordsForUser.data){\n            let password = await getPassword(passwordId.value.id);\n            passwords.push(password);\n        }\n        return passwords;\n    } catch (error) {\n        if (error.message === 'instance not found') {\n            return [];\n        }\n        return;\n    }\n};\nconst getPassword = async (id)=>{\n    try {\n        let password = await faunaClient.query(faunadb__WEBPACK_IMPORTED_MODULE_0__.query.Get(faunadb__WEBPACK_IMPORTED_MODULE_0__.query.Ref(faunadb__WEBPACK_IMPORTED_MODULE_0__.query.Collection('passwords'), id)));\n        if (password.name === 'NotFound') {\n            return 'Passwords for the user were not found!';\n        }\n        if (password.name === 'BadRequest') {\n            return 'Sorry, there was a problem with the request, Database Server issue!';\n        }\n        password.data.id = password.ref.value.id;\n        return password.data;\n    } catch (error) {\n        return error.message;\n    }\n};\nconst updatePassword = async (payload, id)=>{\n    try {\n        let password = await faunaClient.query(faunadb__WEBPACK_IMPORTED_MODULE_0__.query.Update(faunadb__WEBPACK_IMPORTED_MODULE_0__.query.Ref(faunadb__WEBPACK_IMPORTED_MODULE_0__.query.Collection('passwords'), id), {\n            data: payload\n        }));\n        if (password.name === 'NotFound') {\n            return 'Required password data Not found';\n        }\n        if (password.name === 'BadRequest') {\n            return 'Something went wrong, Database Server issue!';\n        }\n        password.data.id = password.ref.value.id;\n        return password.data;\n    } catch (error) {\n        return error.message;\n    }\n};\nconst deletePassword = async (id)=>{\n    try {\n        let password = await faunaClient.query(faunadb__WEBPACK_IMPORTED_MODULE_0__.query.Delete(faunadb__WEBPACK_IMPORTED_MODULE_0__.query.Ref(faunadb__WEBPACK_IMPORTED_MODULE_0__.query.Collection('passwords'), id)));\n        if (password.name === 'NotFound') {\n            return 'Required password data Not found';\n        }\n        if (password.name === 'BadRequest') {\n            return 'Something went wrong, Database Server issue!';\n        }\n        password.data.id = password.ref.value.id;\n        return password.data;\n    } catch (error) {\n        return error.message;\n    }\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(api)/./faunaDBModels.js\n");

/***/ }),

/***/ "(api)/./pages/api/passwords/[id].js":
/*!*************************************!*\
  !*** ./pages/api/passwords/[id].js ***!
  \*************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var _auth0_nextjs_auth0__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @auth0/nextjs-auth0 */ \"@auth0/nextjs-auth0\");\n/* harmony import */ var _auth0_nextjs_auth0__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_auth0_nextjs_auth0__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _faunaDBModels__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../../faunaDBModels */ \"(api)/./faunaDBModels.js\");\n\n\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ((0,_auth0_nextjs_auth0__WEBPACK_IMPORTED_MODULE_0__.withApiAuthRequired)(async (req, res)=>{\n    const user = (0,_auth0_nextjs_auth0__WEBPACK_IMPORTED_MODULE_0__.getSession)(req, res).user;\n    if (req.method === 'PUT') {\n        let password = await (0,_faunaDBModels__WEBPACK_IMPORTED_MODULE_1__.updatePassword)(req.body, req.query.id);\n        res.status(201).json({\n            message: 'Successfully updated password',\n            data: password,\n            status: 'ok'\n        });\n    } else if (req.method === 'GET') {\n        let password = await (0,_faunaDBModels__WEBPACK_IMPORTED_MODULE_1__.getPassword)(req.query.id);\n        res.status(200).json({\n            message: 'Successfully retrieved password',\n            data: password,\n            status: 'ok'\n        });\n    } else if (req.method === 'DELETE') {\n        let password = await (0,_faunaDBModels__WEBPACK_IMPORTED_MODULE_1__.getPassword)(req.query.id);\n        if (password.user.id !== user.sub) {\n            return res.status(403).json({\n                message: 'Forbidden',\n                status: false,\n                data: null\n            });\n        }\n        password = await (0,_faunaDBModels__WEBPACK_IMPORTED_MODULE_1__.deletePassword)(req.query.id);\n        res.status(200).json({\n            message: 'Successfully deleted password',\n            data: password,\n            status: 'ok'\n        });\n    } else {\n        res.status(405).json({\n            message: 'Method not allowed',\n            data: null,\n            status: false\n        });\n    }\n}));\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwaSkvLi9wYWdlcy9hcGkvcGFzc3dvcmRzL1tpZF0uanMuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7OztBQUFxRTtBQUNlO0FBRXBGLGlFQUFlQSx3RUFBbUIsUUFBUUssR0FBRyxFQUFFQyxHQUFHLEdBQUssQ0FBQztJQUNwRCxLQUFLLENBQUNDLElBQUksR0FBR04sK0RBQVUsQ0FBQ0ksR0FBRyxFQUFFQyxHQUFHLEVBQUVDLElBQUk7SUFDdEMsRUFBRSxFQUFFRixHQUFHLENBQUNHLE1BQU0sS0FBSyxDQUFLLE1BQUUsQ0FBQztRQUN2QixHQUFHLENBQUNDLFFBQVEsR0FBRyxLQUFLLENBQUNMLDhEQUFjLENBQy9CQyxHQUFHLENBQUNLLElBQUksRUFBRUwsR0FBRyxDQUFDTSxLQUFLLENBQUNDLEVBQUU7UUFFMUJOLEdBQUcsQ0FBQ08sTUFBTSxDQUFDLEdBQUcsRUFBRUMsSUFBSSxDQUFDLENBQUM7WUFDbEJDLE9BQU8sRUFBRSxDQUErQjtZQUN4Q0MsSUFBSSxFQUFFUCxRQUFRO1lBQ2RJLE1BQU0sRUFBRSxDQUFJO1FBQ2hCLENBQUM7SUFDTCxDQUFDLE1BQU0sRUFBRSxFQUFFUixHQUFHLENBQUNHLE1BQU0sS0FBSyxDQUFLLE1BQUUsQ0FBQztRQUM5QixHQUFHLENBQUNDLFFBQVEsR0FBRyxLQUFLLENBQUNOLDJEQUFXLENBQUNFLEdBQUcsQ0FBQ00sS0FBSyxDQUFDQyxFQUFFO1FBQzdDTixHQUFHLENBQUNPLE1BQU0sQ0FBQyxHQUFHLEVBQUVDLElBQUksQ0FBQyxDQUFDO1lBQ2xCQyxPQUFPLEVBQUUsQ0FBaUM7WUFDMUNDLElBQUksRUFBRVAsUUFBUTtZQUNkSSxNQUFNLEVBQUUsQ0FBSTtRQUNoQixDQUFDO0lBQ0wsQ0FBQyxNQUFNLEVBQUUsRUFBRVIsR0FBRyxDQUFDRyxNQUFNLEtBQUssQ0FBUSxTQUFFLENBQUM7UUFDakMsR0FBRyxDQUFDQyxRQUFRLEdBQUcsS0FBSyxDQUFDTiwyREFBVyxDQUFDRSxHQUFHLENBQUNNLEtBQUssQ0FBQ0MsRUFBRTtRQUM3QyxFQUFFLEVBQUVILFFBQVEsQ0FBQ0YsSUFBSSxDQUFDSyxFQUFFLEtBQUtMLElBQUksQ0FBQ1UsR0FBRyxFQUFFLENBQUM7WUFDaEMsTUFBTSxDQUFDWCxHQUFHLENBQUNPLE1BQU0sQ0FBQyxHQUFHLEVBQUVDLElBQUksQ0FBQyxDQUFDO2dCQUN6QkMsT0FBTyxFQUFFLENBQVc7Z0JBQ3BCRixNQUFNLEVBQUUsS0FBSztnQkFDYkcsSUFBSSxFQUFFLElBQUk7WUFDZCxDQUFDO1FBQ0wsQ0FBQztRQUNEUCxRQUFRLEdBQUcsS0FBSyxDQUFDUCw4REFBYyxDQUFDRyxHQUFHLENBQUNNLEtBQUssQ0FBQ0MsRUFBRTtRQUM1Q04sR0FBRyxDQUFDTyxNQUFNLENBQUMsR0FBRyxFQUFFQyxJQUFJLENBQUMsQ0FBQztZQUNsQkMsT0FBTyxFQUFFLENBQStCO1lBQ3hDQyxJQUFJLEVBQUVQLFFBQVE7WUFDZEksTUFBTSxFQUFFLENBQUk7UUFDaEIsQ0FBQztJQUNMLENBQUMsTUFBTSxDQUFDO1FBQ0pQLEdBQUcsQ0FBQ08sTUFBTSxDQUFDLEdBQUcsRUFBRUMsSUFBSSxDQUFDLENBQUM7WUFDbEJDLE9BQU8sRUFBRSxDQUFvQjtZQUM3QkMsSUFBSSxFQUFFLElBQUk7WUFDVkgsTUFBTSxFQUFFLEtBQUs7UUFDakIsQ0FBQztJQUNMLENBQUM7QUFDTCxDQUFDLENBQUMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9jeWJlcnZhdWx0bmV4dC8uL3BhZ2VzL2FwaS9wYXNzd29yZHMvW2lkXS5qcz9mMzAwIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IHdpdGhBcGlBdXRoUmVxdWlyZWQgLGdldFNlc3Npb24gfSBmcm9tICdAYXV0aDAvbmV4dGpzLWF1dGgwJ1xyXG5pbXBvcnQgeyBkZWxldGVQYXNzd29yZCwgZ2V0UGFzc3dvcmQsIHVwZGF0ZVBhc3N3b3JkIH0gZnJvbSAnLi4vLi4vLi4vZmF1bmFEQk1vZGVscydcclxuXHJcbmV4cG9ydCBkZWZhdWx0IHdpdGhBcGlBdXRoUmVxdWlyZWQoYXN5bmMgKHJlcSwgcmVzKSA9PiB7XHJcbiAgICBjb25zdCB1c2VyID0gZ2V0U2Vzc2lvbihyZXEsIHJlcykudXNlclxyXG4gICAgaWYgKHJlcS5tZXRob2QgPT09ICdQVVQnKSB7XHJcbiAgICAgICAgbGV0IHBhc3N3b3JkID0gYXdhaXQgdXBkYXRlUGFzc3dvcmQoXHJcbiAgICAgICAgICAgIHJlcS5ib2R5LCByZXEucXVlcnkuaWRcclxuICAgICAgICApXHJcbiAgICAgICAgcmVzLnN0YXR1cygyMDEpLmpzb24oeyBcclxuICAgICAgICAgICAgbWVzc2FnZTogJ1N1Y2Nlc3NmdWxseSB1cGRhdGVkIHBhc3N3b3JkJyxcclxuICAgICAgICAgICAgZGF0YTogcGFzc3dvcmQsXHJcbiAgICAgICAgICAgIHN0YXR1czogJ29rJ1xyXG4gICAgICAgIH0pXHJcbiAgICB9IGVsc2UgaWYgKHJlcS5tZXRob2QgPT09ICdHRVQnKSB7XHJcbiAgICAgICAgbGV0IHBhc3N3b3JkID0gYXdhaXQgZ2V0UGFzc3dvcmQocmVxLnF1ZXJ5LmlkKVxyXG4gICAgICAgIHJlcy5zdGF0dXMoMjAwKS5qc29uKHsgXHJcbiAgICAgICAgICAgIG1lc3NhZ2U6ICdTdWNjZXNzZnVsbHkgcmV0cmlldmVkIHBhc3N3b3JkJyxcclxuICAgICAgICAgICAgZGF0YTogcGFzc3dvcmQsXHJcbiAgICAgICAgICAgIHN0YXR1czogJ29rJ1xyXG4gICAgICAgIH0pXHJcbiAgICB9IGVsc2UgaWYgKHJlcS5tZXRob2QgPT09ICdERUxFVEUnKSB7XHJcbiAgICAgICAgbGV0IHBhc3N3b3JkID0gYXdhaXQgZ2V0UGFzc3dvcmQocmVxLnF1ZXJ5LmlkKVxyXG4gICAgICAgIGlmIChwYXNzd29yZC51c2VyLmlkICE9PSB1c2VyLnN1Yikge1xyXG4gICAgICAgICAgICByZXR1cm4gcmVzLnN0YXR1cyg0MDMpLmpzb24oe1xyXG4gICAgICAgICAgICAgICAgbWVzc2FnZTogJ0ZvcmJpZGRlbicsXHJcbiAgICAgICAgICAgICAgICBzdGF0dXM6IGZhbHNlLFxyXG4gICAgICAgICAgICAgICAgZGF0YTogbnVsbFxyXG4gICAgICAgICAgICB9KVxyXG4gICAgICAgIH1cclxuICAgICAgICBwYXNzd29yZCA9IGF3YWl0IGRlbGV0ZVBhc3N3b3JkKHJlcS5xdWVyeS5pZClcclxuICAgICAgICByZXMuc3RhdHVzKDIwMCkuanNvbih7IFxyXG4gICAgICAgICAgICBtZXNzYWdlOiAnU3VjY2Vzc2Z1bGx5IGRlbGV0ZWQgcGFzc3dvcmQnLFxyXG4gICAgICAgICAgICBkYXRhOiBwYXNzd29yZCxcclxuICAgICAgICAgICAgc3RhdHVzOiAnb2snXHJcbiAgICAgICAgfSlcclxuICAgIH0gZWxzZSB7XHJcbiAgICAgICAgcmVzLnN0YXR1cyg0MDUpLmpzb24oe1xyXG4gICAgICAgICAgICBtZXNzYWdlOiAnTWV0aG9kIG5vdCBhbGxvd2VkJyxcclxuICAgICAgICAgICAgZGF0YTogbnVsbCxcclxuICAgICAgICAgICAgc3RhdHVzOiBmYWxzZVxyXG4gICAgICAgIH0pXHJcbiAgICB9XHJcbn0pXHJcbiAgIl0sIm5hbWVzIjpbIndpdGhBcGlBdXRoUmVxdWlyZWQiLCJnZXRTZXNzaW9uIiwiZGVsZXRlUGFzc3dvcmQiLCJnZXRQYXNzd29yZCIsInVwZGF0ZVBhc3N3b3JkIiwicmVxIiwicmVzIiwidXNlciIsIm1ldGhvZCIsInBhc3N3b3JkIiwiYm9keSIsInF1ZXJ5IiwiaWQiLCJzdGF0dXMiLCJqc29uIiwibWVzc2FnZSIsImRhdGEiLCJzdWIiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(api)/./pages/api/passwords/[id].js\n");

/***/ })

};
;

// load runtime
var __webpack_require__ = require("../../../webpack-api-runtime.js");
__webpack_require__.C(exports);
var __webpack_exec__ = (moduleId) => (__webpack_require__(__webpack_require__.s = moduleId))
var __webpack_exports__ = (__webpack_exec__("(api)/./pages/api/passwords/[id].js"));
module.exports = __webpack_exports__;

})();